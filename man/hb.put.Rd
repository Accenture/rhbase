% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/put-and-pull.R
\name{hb.put}
\alias{hb.put}
\title{Easily Put Data Into HBase}
\usage{
hb.put(table_name, column_family, rowkey, column, value = NULL, ...)
}
\arguments{
\item{table_name}{The name of the desired table}

\item{column_family}{The name of the desired column family}

\item{rowkey}{Rowkey Name}

\item{column}{Column Name}

\item{value}{Desired Value}
}
\description{
Send Data to HBase in a way that actually makes sense
}
\details{
This function works intuitively as HBase is meant to work. You have two specific options for inputting
data into this solution. 1st, you can fully describe everything as a full data.frame or tidyr format might be
described. Or 2, you can input data dynamically according to the values higher level domain. That is, a table is
the top level domain. Within a table are column families, within those are rowkeys, and within those are columns.
This allows you to possbily input data using vectors and lists of different sizes. See the examples section to see
both of these options detailed.
}
\examples{
hostLoc = '127.0.0.1'  #Give your server IP
port = 9090  #Default port for thrift service
hb.init(serialize = "character")
TABLE_NAME = "Test"
}
\author{
Aaron Benz
}

